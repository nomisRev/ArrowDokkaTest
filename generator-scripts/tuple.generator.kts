import java.io.File

val notice = """/*
  AUTOGENERATED FILE. DON'T EDIT DIRECTLY

  This file was generated by tuple.generator.kts
*/

"""

val package_ = "arrow.syntax.collections"

val maxTuple = 21

val availableLetters = ('a'..'z').toList().map { it.toString() }

val fileContent = StringBuilder()

val imports = (2..maxTuple + 1).joinToString(separator = "\n") { "import arrow.core.Tuple$it" }

fileContent.append(notice)
fileContent.append("package $package_")
fileContent.append("\n\n")
fileContent.append(imports)
fileContent.append("\n\n")

for (i in 2..maxTuple) {

  val letters = availableLetters.take(i + 1)

  val diamond1 = "<${letters.joinToString { it.toUpperCase() }}>"
  val diamond2 = "<${letters.dropLast(1).joinToString { it.toUpperCase() }}>"

  val newLetter = availableLetters[i]

  val constructor = (letters.dropLast(1).map { "this.$it" } + newLetter).joinToString()

  fileContent.append(
          "operator fun $diamond1 Tuple$i$diamond2.plus($newLetter: ${newLetter.toUpperCase()}): Tuple${i+1}$diamond1 = Tuple${i + 1}($constructor)"
  )
  fileContent.append("\n")

}

val fileLocation = "../modules/core/arrow-syntax/src/main/kotlin/arrow/syntax/collections/tuple.kt"

File("tuple.kt").writeText(fileContent.toString())